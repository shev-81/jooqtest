/*
 * This file is generated by jOOQ.
 */
package com.example.jooqtest.domain.tables.records;


import com.example.jooqtest.domain.tables.Products;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> implements Record6<Long, BigDecimal, String, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.products.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.products.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.products.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.products.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.products.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.products.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.products.category_id</code>.
     */
    public void setCategoryId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.products.category_id</code>.
     */
    public Long getCategoryId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.products.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.products.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.products.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.products.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, BigDecimal, String, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, BigDecimal, String, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Products.PRODUCTS.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Products.PRODUCTS.PRICE;
    }

    @Override
    public Field<String> field3() {
        return Products.PRODUCTS.NAME;
    }

    @Override
    public Field<Long> field4() {
        return Products.PRODUCTS.CATEGORY_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Products.PRODUCTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Products.PRODUCTS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getPrice();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Long component4() {
        return getCategoryId();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getPrice();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Long value4() {
        return getCategoryId();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public ProductsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProductsRecord value2(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductsRecord value4(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public ProductsRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ProductsRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ProductsRecord values(Long value1, BigDecimal value2, String value3, Long value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(Long id, BigDecimal price, String name, Long categoryId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Products.PRODUCTS);

        setId(id);
        setPrice(price);
        setName(name);
        setCategoryId(categoryId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}

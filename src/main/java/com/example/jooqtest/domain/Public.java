/*
 * This file is generated by jOOQ.
 */
package com.example.jooqtest.domain;


import com.example.jooqtest.domain.tables.BatchJobExecution;
import com.example.jooqtest.domain.tables.BatchJobExecutionContext;
import com.example.jooqtest.domain.tables.BatchJobExecutionParams;
import com.example.jooqtest.domain.tables.BatchJobInstance;
import com.example.jooqtest.domain.tables.BatchStepExecution;
import com.example.jooqtest.domain.tables.BatchStepExecutionContext;
import com.example.jooqtest.domain.tables.Categories;
import com.example.jooqtest.domain.tables.Products;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.batch_job_execution</code>.
     */
    public final BatchJobExecution BATCH_JOB_EXECUTION = BatchJobExecution.BATCH_JOB_EXECUTION;

    /**
     * The table <code>public.batch_job_execution_context</code>.
     */
    public final BatchJobExecutionContext BATCH_JOB_EXECUTION_CONTEXT = BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT;

    /**
     * The table <code>public.batch_job_execution_params</code>.
     */
    public final BatchJobExecutionParams BATCH_JOB_EXECUTION_PARAMS = BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS;

    /**
     * The table <code>public.batch_job_instance</code>.
     */
    public final BatchJobInstance BATCH_JOB_INSTANCE = BatchJobInstance.BATCH_JOB_INSTANCE;

    /**
     * The table <code>public.batch_step_execution</code>.
     */
    public final BatchStepExecution BATCH_STEP_EXECUTION = BatchStepExecution.BATCH_STEP_EXECUTION;

    /**
     * The table <code>public.batch_step_execution_context</code>.
     */
    public final BatchStepExecutionContext BATCH_STEP_EXECUTION_CONTEXT = BatchStepExecutionContext.BATCH_STEP_EXECUTION_CONTEXT;

    /**
     * The table <code>public.categories</code>.
     */
    public final Categories CATEGORIES = Categories.CATEGORIES;

    /**
     * The table <code>public.products</code>.
     */
    public final Products PRODUCTS = Products.PRODUCTS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.BATCH_JOB_EXECUTION_SEQ,
            Sequences.BATCH_JOB_SEQ,
            Sequences.BATCH_STEP_EXECUTION_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            BatchJobExecution.BATCH_JOB_EXECUTION,
            BatchJobExecutionContext.BATCH_JOB_EXECUTION_CONTEXT,
            BatchJobExecutionParams.BATCH_JOB_EXECUTION_PARAMS,
            BatchJobInstance.BATCH_JOB_INSTANCE,
            BatchStepExecution.BATCH_STEP_EXECUTION,
            BatchStepExecutionContext.BATCH_STEP_EXECUTION_CONTEXT,
            Categories.CATEGORIES,
            Products.PRODUCTS
        );
    }
}
